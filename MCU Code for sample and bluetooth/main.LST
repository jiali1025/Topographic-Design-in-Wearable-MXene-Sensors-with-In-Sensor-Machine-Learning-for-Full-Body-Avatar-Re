C51 COMPILER V9.52.0.0   MAIN                                                              08/22/2020 17:18:55 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: G:\51\C51\BIN\C51.EXE main.c ROM(SMALL) BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          /*
   2           * This is a program for testing AD7606 used STC89C52RC
   3           * The line connecting AD7606 with STC89C52RC is:
   4           * STC89C52RC    |    AD7606
   5           *   P0      |    DB[0:7]
   6           *   P2          |    DB[8:15]
   7           *   OS0         |    P1^0
   8           *   OS1         |    P1^1
   9           *   OS2         |    P1^2
  10           *   rage        |    P1^3
  11           *   convst      |    P1^4
  12           *   busy        |    P1^5
  13           *   rst         |    P1^6
  14           *   rd_and_cs   |    P1^7
  15           *   green_led   |    P3^6
  16           *   red_led     |    P3^7
  17           *   GND     |    GND
  18           *   +5V     |    VCC
  19           *   green_led   |    P3_6
  20           *   red_led     |    P3_7
  21          
  22           */
  23          
  24          #include <reg52.h>
  25          
  26          #include <intrins.h>
  27          #include <stdio.h>
  28          #include "AD7076.h"
  29          #include "other.h"
  30          sfr AUXR=0x8e;
  31          //uchar introduce1[] = "This is a program "; 
  32          //uchar introduce2[] = "for testing AD7606\r\n";
  33          uchar sampling[] = "a";
  34          //uchar newline[] = "\0\0";
  35          uchar space[] = " ";
  36          //uchar *DB_str[16] = {"\0","\1","\2","\3","\4","\5","\6","\7","\8","\9","\10","\11","\12","\13","\14","\1
             -5"};
  37          data1 = 0x01;
  38          uchar Buffer[4];
  39          
  40          /*
  41          uchar *data_to_string(uchar Data)
  42          {
  43            uchar tmp;
  44            tmp = Data & 0x0f;
  45            str[1] =DB_str[binary_to_decimal(tmp)];
  46            tmp = Data>>4;
  47            str[0] =DB_str[binary_to_decimal(tmp)];
  48            return str;
  49          }
  50          */
  51          
  52          //void Com_Init(void)
  53          //{
  54          //  TMOD = 0x22;
C51 COMPILER V9.52.0.0   MAIN                                                              08/22/2020 17:18:55 PAGE 2   

  55          //  PCON = 0x00;
  56          //  SCON = 0x50;
  57          //  TH1 = 0xFd;
  58          //  TL1 = 0xFd;
  59          //  TR1 = 1;
  60          //  TH0=0x14;
  61          //  TL0=0x00;
  62          //  IE=0x82;
  63          //  TR0=1;
  64          //}
  65          
  66          ////void serial_init(void)
  67          ////{
  68          ////  SCON = 0x50;  //UART为模式一，8位数据，允许接收
  69          ////  TMOD |= 0x22; //定时器1为模式二，8位自动重装
  70          ////  PCON |= 0x80; //SMOD=1 //改过了
  71          ////  TH1 =0xfd;    //波特率为19200，晶振频率为11.0592MHz
  72          ////  IE = 0x82;
  73          ////  TL1 = 0xFd;
  74          ////  TR1 = 1;
  75          ////  TI = 1; 
  76          
  77          ////}
  78          void serial_init(void)
  79          {
  80   1        SCON = 0x50;  //UART为模式一，8位数据，允许接收
  81   1        TMOD |= 0x22; //定时器1为模式二，8位自动重装
  82   1        PCON |= 0x00; //SMOD=1 //改过了
  83   1        TH1 =0xfd;    //波特率为19200，晶振频率为11.0592MHz
  84   1        IE = 0x82;
  85   1        TL1 = 0xFd;
  86   1        TR1 = 1;
  87   1        TI = 1; 
  88   1      //  
  89   1        
  90   1      //  PCON &= 0x7F;   //??????
  91   1      //  SCON = 0x50;    //8???,?????
  92   1      //  AUXR &= 0xBF;   //???1???Fosc/12,?12T
  93   1      //  AUXR &= 0xFE;   //??1?????1???????
  94   1      //  TMOD &= 0x0F;   //?????1???
  95   1      //  TMOD |= 0x20;   //?????1?8???????
  96   1      //  TL1 = 0xFE;   //??????
  97   1      //  TH1 = 0xFE;   //????????
  98   1      //  ET1 = 0;    //?????1??
  99   1      //  TR1 = 1;    //?????1
 100   1      }
 101          /*
 102          //向串口发送一个函数
 103          void serial_send_byte(uchar ch) 
 104          { 
 105            SBUF=ch; 
 106              while (TI== 0); 
 107              TI = 0 ; 
 108          }
 109          */
 110          
 111          //向串口发送一串字符数据
 112          void serial_send_string(uchar p)
 113          {
 114   1        while(1)
 115   1        {
 116   2          SBUF = p;
C51 COMPILER V9.52.0.0   MAIN                                                              08/22/2020 17:18:55 PAGE 3   

 117   2          while(TI == 0)
 118   2          { _nop_(); 
 119   3          }
 120   2          TI = 0;
 121   2          break;
 122   2      //    p++;
 123   2      //    if(*p == '\0')
 124   2      //      break; 
 125   2        }   
 126   1      }
 127           
 128          int main()
 129          {
 130   1        struct DB_data_struct *DB_data;
 131   1        uchar k,tmp;
 132   1        uint i=0;
 133   1        //uchar DB_data_cmp[8];
 134   1      //  Com_Init();
 135   1        serial_init();
 136   1        AD7606_init();
 137   1        //Buffer[1]='a';
 138   1      //  Buffer[2]= data1;
 139   1      //  Buffer[3]= '\0';
 140   1        while(1)
 141   1        {
 142   2      //    DB_data = DB_str;
 143   2      //    serial_send_string(introduce1);
 144   2      //    serial_send_string(introduce2);
 145   2          AD7606_startconvst();
 146   2          while((busy == 1))    //当busy为低电平时，数据转换完毕，此时可以读取数据
 147   2          {
 148   3      //      serial_send_byte(busy);
 149   3      //      delay_ms(500);
 150   3            ;
 151   3          }
 152   2          DB_data = AD7606_read_data();
 153   2          
 154   2          
 155   2          for(k=0;k<8;k++)
 156   2          {
 157   3            Buffer[1]='a'+k;
 158   3            
 159   3            
 160   3            //serial_send_string(Buffer);
 161   3      //      tmp = (DB_data->DB_data_H>>4) & 0x0f;
 162   3      //      serial_send_string(DB_str[tmp]);
 163   3      //      tmp = (DB_data->DB_data_H) & 0x0f;
 164   3      //      serial_send_string(DB_str[tmp]);
 165   3      //      tmp = (DB_data->DB_data_L>>4) & 0x0f;
 166   3      //      serial_send_string(DB_str[tmp]);
 167   3      //      tmp = (DB_data->DB_data_L) & 0x0f;
 168   3      //      serial_send_string(DB_str[tmp]);
 169   3            //tmp = (DB_data->DB_data_H>>4) & 0x0f;
 170   3      //      if(DB_str[tmp] == "\0")
 171   3            tmp = (DB_data->DB_data_H);
 172   3            Buffer[2]= tmp ;
 173   3            DB_data->DB_data_H=DB_data->DB_data_H>>8;
 174   3            //serial_send_string(DB_str[tmp]);
 175   3            //tmp = (DB_data->DB_data_H) & 0x0f;
 176   3            tmp = (DB_data->DB_data_L);
 177   3            Buffer[3]= tmp ;
 178   3            DB_data->DB_data_L=DB_data->DB_data_L>>8;
C51 COMPILER V9.52.0.0   MAIN                                                              08/22/2020 17:18:55 PAGE 4   

 179   3            //serial_send_string(DB_str[tmp]);
 180   3            //tmp = (DB_data->DB_data_L>>4) & 0x0f;
 181   3            //Buffer[4]= tmp ;
 182   3            //serial_send_string(DB_str[tmp]);
 183   3            //tmp = (DB_data->DB_data_L) & 0x0f;
 184   3            //Buffer[5]= tmp ;
 185   3            //serial_send_string(DB_str[tmp]);
 186   3          //  serial_send_string(space);
 187   3          //  DB_data_cmp[k] = DB_data->DB_data_H;
 188   3            DB_data += 1;
 189   3            Buffer[4]= '\0';
 190   3            for(i=1;i<5;i++){
 191   4            serial_send_string(Buffer[i]);
 192   4            }
 193   3          }
 194   2          /*if((DB_data_cmp[0]>0x7D)&&(DB_data_cmp[1]>0x7D)&&(DB_data_cmp[2]>0x7D)&&(DB_data_cmp[3]>0x7D) \
 195   2          &&(DB_data_cmp[4]>0x7D)&&(DB_data_cmp[5]>0x7D)&&(DB_data_cmp[6]>0x7D)&&(DB_data_cmp[7]>0x7D))
 196   2          { //电压检测为预定值，则绿灯亮
 197   2            red_led = 0;
 198   2            green_led = 1;
 199   2          }
 200   2          else
 201   2          { //电压检测为非预定值，则红灯亮
 202   2            green_led = 0;
 203   2            red_led = 1;
 204   2          }*/
 205   2      //    serial_send_string(newline);
 206   2      //    serial_send_string(newline);
 207   2      //    serial_send_string(newline);
 208   2          delay_ms(1);
 209   2        }
 210   1      //  return 0; 
 211   1      }
 212          
 213          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    156    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     10       5
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
